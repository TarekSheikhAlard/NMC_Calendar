<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="ReactComponent" constructor="ReactComponent" version="0.0.1" display-name-key="CalendarReactComponent" description-key="ReactComponent description" control-type="standard" >
  <!-- dataset node represents a set of entity records on CDS; allow more than one datasets -->
  <data-set name="sampleDataSet" display-name-key="Dataset_Display_Key">
    <!-- 'property-set' node represents a unique, configurable property that each record in the dataset must provide. -->
    <!-- UNCOMMENT TO ADD PROPERTY-SET NODE
    <property-set name="samplePropertySet" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type="SingleLine.Text" usage="bound" required="true" />
    -->
  </data-set>
  
  <property name="eventFieldName"  display-name-key="Event Name Field" description-key="Enter the Event Name Field schema name which will be used to display on the calendar. For related entities use the following format (new_entityname.new_fieldname)" of-type="SingleLine.Text" usage="input" required="false" default-value="name" />
  <property name="eventFieldStart" display-name-key="Event Start Field" description-key="Enter the Event Start Field schema name which will be used to display on the calendar. For related entities use the following format (new_entityname.new_fieldname)" of-type="SingleLine.Text" usage="input" required="false" default-value="start" />
  <property name="eventFieldEnd" display-name-key="Event End Field" description-key="Enter the Event End Field schema name which will be used to display on the calendar. For related entities use the following format (new_entityname.new_fieldname)" of-type="SingleLine.Text" usage="input" required="false" default-value="end" />
  <property name="slotEntityName" display-name-key="Slot Entity" description-key="Enter the Entity Name  which will be used to open on empty slot click. For related entities use the following format (new_entityname)" of-type="SingleLine.Text" usage="input" required="false" default-value="end" />
  <property name="eventColorEntityName" display-name-key="Events Colored Entity" description-key="Enter the Entity names EX:(task,appointment,email)" of-type="SingleLine.Text" usage="input" required="false" default-value="end" />
  <property name="eventColorHexValue" display-name-key="Events Colors" description-key="Enter the Events Entity Colors EX:(#FF0000;#00FF00;#0000FF) this propirty is related to the above property " of-type="SingleLine.Text" usage="input" required="false" default-value="end" />
  <property name="eventColorDefaultValue" display-name-key="Events Default Color" description-key="Enter the Default Events Color with Hex Format (Ex: #FF0000)" of-type="SingleLine.Text" usage="input" required="false" default-value="#FF0000" />
  <property name="usequickcreateform" display-name-key="Quick Create Form" description-key="Enter 1 to use the quick create form when clicking the slot area otherwise enter 0" of-type="SingleLine.Text" usage="input" required="false" default-value="0" />
  <property name="openInNewWindow" display-name-key="Open Form In New Window" description-key="Enter 1 to open form in new window otherwise Enter 0" of-type="SingleLine.Text" usage="input" required="false" default-value="0" />

    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->


    <resources>
      <code path="index.ts" order="1"/>
  
      <css path="../node_modules/@fullcalendar/common/main.css" order="1" />
      <css path="../node_modules/@fullcalendar/daygrid/main.css" order="1" />
      <css path="../node_modules/@fullcalendar/timegrid/main.css" order="1" />
      <css path="ReactComponent.css" order="1" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/ReactComponent.css" order="1" />
      <resx path="strings/ReactComponent.1033.resx" version="1.0.0" />
      -->
    </resources>
     <feature-usage>
          <uses-feature name="WebAPI" required="true" />
          <uses-feature name="Utility" required="true" />
     </feature-usage>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>